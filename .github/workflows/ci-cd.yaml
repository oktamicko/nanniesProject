name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Ubah jika branch utama berbeda
  pull_request:
    branches:
      - main # Ubah jika branch utama berbeda

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Tidak perlu diubah, ini untuk checkout code dari repo

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 # Setup Docker Buildx

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Tambahkan Docker Hub username di Secrets
          password: ${{ secrets.DOCKER_PASSWORD }} # Tambahkan Docker Hub password di Secrets

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: . # Pastikan ini adalah lokasi yang tepat dari source code kamu
          push: true
          tags: oktamicko/nannies-project:latest # Ganti dengan Docker Hub username dan nama image

  deploy:
    runs-on: ubuntu-latest
    needs: build # Pastikan deploy dijalankan setelah build selesai

    steps:
      - name: Deploy to server via SSH with password
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }} # Tambahkan IP/hostname server di Secrets
          username: ${{ secrets.SERVER_USER }} # Tambahkan username SSH di Secrets
          password: ${{ secrets.SERVER_PASSWORD }} # Tambahkan password SSH di Secrets
          port: ${{ secrets.SERVER_PORT }} # Tambahkan port SSH (biasanya 22)
          script: |
            docker pull your-dockerhub-username/your-app-name:latest  # Menarik image yang baru saja di-push dari Docker Hub
            docker stop your-app-name || true  # Hentikan container jika sudah berjalan
            docker rm your-app-name || true  # Hapus container jika sudah ada
            docker run -d --name your-app-name -p 80:80 your-dockerhub-username/your-app-name:latest  # Jalankan container dengan image yang baru saja dibangun

      - name: Wait for container to be healthy
        run: |
          for i in {1..10}; do
            if docker inspect --format '{{.State.Health.Status}}' your-app-name | grep -q "healthy"; then  # Ganti 'your-app-name' dengan nama container
              echo "Container is healthy"
              exit 0
            else
              echo "Waiting for container to be healthy..."
              sleep 10
            fi
          done
          echo "Container failed to become healthy"
          exit 1
